<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/tx
			            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
			            http://www.springframework.org/schema/aop
           	            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- 自动扫描 -->
 	<context:annotation-config /> 
	<context:component-scan base-package="com.test.common.service" />
	<context:component-scan base-package="com.test.base.service" />
	<context:component-scan base-package="com.test.handler.myProject" />
	<context:component-scan base-package="com.test.service" />
	<!--<context:component-scan base-package="com.ncvass.dao" />-->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
	</bean>

<!--	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		&lt;!&ndash; 自动扫描mapping.xml文件 &ndash;&gt;
		<property name="mapperLocations" value="classpath:com/ncvas/dao/*.xml"></property>
	</bean>-->

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
<!--	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.cyber.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>-->
      <bean id="redisHttpSessionConfiguration"  class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration" > 
 		<property name="maxInactiveIntervalInSeconds" value="120" /> 
 		</bean>
<!-- 	<bean
 		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
		&lt;!&ndash; redis 配置 &ndash;&gt;
		<property name="hostName" value="${redis.host}" />
 		<property name="port" value="${redis.port}" />
 		<property name="password" value="${redis.password}" />
 	</bean>-->
     


	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事物模板配置 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="put*" propagation="REQUIRED" />
			<tx:method name="use*" propagation="REQUIRED" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- AOP业务日志 ,必须扫描切面需要监视的层 -->
	<!-- AOP业务日志 ,必须扫描切面需要监视的层 <aop:aspectj-autoproxy proxy-target-class="true"> 
		<aop:include name="logAspect" /> </aop:aspectj-autoproxy>  -->
		<bean id="logAspect" 
		class="com.test.log.SystemLogAspect" />
	<aop:config expose-proxy="true">
		<!-- 只对业务逻辑层实施事务 -->
		<aop:pointcut id="txPointcut"
			expression="execution(* com.test.*.service..impl..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
		<aop:aspect id="aop_aspect_frisetclass" ref="logAspect">
			<!-- 定义个After增强处理，直接指定切入点表达式，以切面 Bean 中的 Release() 方法作为增强处理方法 -->
			<aop:after
				pointcut="execution(* com.test.*.service..impl..*.*(..))"
				method="doAfterInServiceLayer" />
			
		</aop:aspect>
	</aop:config>
</beans>